--- dwm1/config.def.h	2020-11-21 15:50:07.363753031 +0100
+++ dwm/config.def.h	2020-11-21 15:29:43.529013729 +0100
@@ -1,5 +1,14 @@
 /* See LICENSE file for copyright and license details. */
 
+#include <X11/XF86keysym.h>
+
+static const char *upvol[]   = { "/usr/bin/pactl", "set-sink-volume", "0", "+5%",     NULL };
+static const char *downvol[] = { "/usr/bin/pactl", "set-sink-volume", "0", "-5%",     NULL };
+static const char *mutevol[] = { "/usr/bin/pactl", "set-sink-mute",   "0", "toggle",  NULL };
+
+static const char *downbright[]	= { "sudo", "/usr/local/sbin/backlight.sh", "-", NULL };
+static const char *upbright[] 	= { "sudo", "/usr/local/sbin/backlight.sh", "+", NULL };
+
 /* appearance */
 static const unsigned int borderpx  = 1;        /* border pixel of windows */
 static const unsigned int gappx     = 2;        /* gaps between windows */
@@ -34,9 +43,12 @@
 	 *	WM_CLASS(STRING) = instance, class
 	 *	WM_NAME(STRING) = title
 	 */
-	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+	/* class                    instance    title       tags mask     isfloating   monitor */
+	{ "Gimp",                   NULL,       NULL,       0,            1,           -1 },
+	{ "Qemu-system-x86_64",     NULL,       NULL,       0,            1,           -1 },
+	{ "Qemu-system-i386",       NULL,       NULL,       0,            1,           -1 },
+	{ "matplotlib",             NULL,       NULL,       0,            1,           -1 },
+	{ "Firefox",                NULL,       NULL,       1 << 8,       0,           -1 },
 };
 
 /* layout(s) */
@@ -52,7 +64,7 @@
 };
 
 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
@@ -62,29 +74,43 @@
 /* helper for spawning shell commands in the pre dwm-5.0 fashion */
 #define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
 
+const char term[] = "st";
+
 /* commands */
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
-static const char *termcmd[]  = { "st", NULL };
+static const char *dmenucmd[]       = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
+static const char *termcmd[]        = { term, NULL };
+static const char *slockcmd[] 		= { "slock", NULL };
+//static const char *nmtuicmd[] 		= { term, "-e", "nmtui", NULL };
+static const char *nmdmenu[] 		= { "sudo", "connman_dmenu", NULL };
+static const char *firefoxcmd[] 	= { "firefox", NULL };
+static const char *powercmd[] 		= { "power.sh", NULL };
+static const char *bashmountcmd[]	= { term, "-e", "bashmount", NULL };
+static const char *scrot[]			= { "scrot", NULL };
+static const char *flameshot[]		= { "flameshot", "gui", NULL };
 
 static Key keys[] = {
 	/* modifier                     key        function        argument */
 	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
 	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
 	{ MODKEY,                       XK_b,      togglebar,      {0} },
+	{ MODKEY|ShiftMask,             XK_b,      spawn,          {.v = firefoxcmd } },
+	{ MODKEY|ShiftMask,             XK_w,      spawn,          {.v = nmdmenu } },
 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
 	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
 	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
 	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
 	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
 	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
+	{ MODKEY|ShiftMask,             XK_l,      spawn,          {.v = slockcmd } },
 	{ MODKEY,                       XK_Return, zoom,           {0} },
 	{ MODKEY,                       XK_Tab,    view,           {0} },
 	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
 	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
 	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
 	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
-	{ MODKEY,                       XK_space,  setlayout,      {0} },
+	{ MODKEY|ShiftMask,             XK_m,      spawn,          {.v = bashmountcmd } },
+	{ MODKEY|ControlMask,           XK_space,  setlayout,      {0} },
 	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
 	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
 	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
@@ -92,6 +118,7 @@
 	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
 	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
 	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
+	{ MODKEY|ShiftMask,             XK_s,      spawn,          {.v = powercmd } },
 	TAGKEYS(                        XK_1,                      0)
 	TAGKEYS(                        XK_2,                      1)
 	TAGKEYS(                        XK_3,                      2)
@@ -102,6 +129,13 @@
 	TAGKEYS(                        XK_8,                      7)
 	TAGKEYS(                        XK_9,                      8)
 	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+	{ 0,                            XK_Print,  spawn,          {.v = scrot} },
+	{ ShiftMask,                    XK_Print,  spawn,          {.v = flameshot} },
+	{ 0,                       XF86XK_AudioLowerVolume,  spawn, {.v = downvol } },
+	{ 0,                       XF86XK_AudioMute,         spawn, {.v = mutevol } },
+	{ 0,                       XF86XK_AudioRaiseVolume,  spawn, {.v = upvol   } },
+	{ 0,                       XF86XK_MonBrightnessDown, spawn, {.v = downbright } },
+	{ 0,                       XF86XK_MonBrightnessUp,   spawn, {.v = upbright   } },
 };
 
 /* button definitions */
